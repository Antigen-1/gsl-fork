@comment
@node Exponential Integrals
@section Exponential Integrals
@cindex exponential integrals


@subsection Exponential Integrals

Information on the exponential integrals can be found in Abramowitz &
Stegun, Chapter 5.  These functions are declared in the header file
@file{gsl_sf_expint.h}.

@deftypefun double gsl_sf_expint_E1 (double @var{x})
@deftypefunx int gsl_sf_expint_E1_e (double @var{x}, gsl_sf_result * @var{result})
These routines compute the exponential integral @math{E_1(x) := Re
\int_1^\infty dt \exp(-xt)/t}.
@comment Domain: x != 0.0
@comment Exceptional Return Values: GSL_EDOM, GSL_EOVRFLW, GSL_EUNDRFLW
@end deftypefun


@deftypefun double gsl_sf_expint_E2 (double @var{x})
@deftypefunx int gsl_sf_expint_E2_e (double @var{x}, gsl_sf_result * @var{result})
These routines compute the second-order exponential integral
@math{E_2(x) := \Re \int_1^\infty dt \exp(-xt)/t^2}.
@comment Domain: x != 0.0
@comment Exceptional Return Values: GSL_EDOM, GSL_EOVRFLW, GSL_EUNDRFLW
@end deftypefun


@subsection Ei(x)


@deftypefun double gsl_sf_expint_Ei (double @var{x})
@deftypefunx int gsl_sf_expint_Ei_e (double @var{x}, gsl_sf_result * @var{result})
These routines compute the exponential integral
@c{$Ei(x) := PV(\int_{-x}^\infty dt \exp(-t)/t)$}
@math{Ei(x) := PV(\int_@{-x@}^\infty dt \exp(-t)/t)}, where @math{PV}
denotes the principal value of the integral.
@comment Domain: x != 0.0
@comment Exceptional Return Values: GSL_EDOM, GSL_EOVRFLW, GSL_EUNDRFLW
@end deftypefun


@subsection Hyperbolic Integrals

@deftypefun double gsl_sf_Shi (double @var{x})
@deftypefunx int gsl_sf_Shi_e (double @var{x}, gsl_sf_result * @var{result})
These routines compute the integral @math{Shi(x) = \int_0^x dt \sinh(t)/t}.
@comment Exceptional Return Values: GSL_EOVRFLW, GSL_EUNDRFLW
@end deftypefun


@deftypefun double gsl_sf_Chi (double @var{x})
@deftypefunx int gsl_sf_Chi_e (double @var{x}, gsl_sf_result * @var{result})
These routines compute the integral @math{ Chi(x) := Re[ \gamma_E + \log(x) + \int_0^x dt (\cosh[t]-1)/t] }, where @math{\gamma_E} is the Euler constant (available as the macro @code{M_EULER}).
@comment Domain: x != 0.0
@comment Exceptional Return Values: GSL_EDOM, GSL_EOVRFLW, GSL_EUNDRFLW
@end deftypefun


@subsection Ei_3(x)

@deftypefun double gsl_sf_expint_3 (double @var{x})
@deftypefunx int gsl_sf_expint_3_e (double @var{x}, gsl_sf_result * @var{result})
These routines compute the exponential integral @math{Ei_3(x) = \int_0^x
dt \exp(-t^3)} for @c{$x \ge 0$}
@math{x >= 0}.
@comment Exceptional Return Values: GSL_EDOM
@end deftypefun

@subsection Trigonometric Integrals

@deftypefun double gsl_sf_Si (const double @var{x})
@deftypefunx int gsl_sf_Si_e (double @var{x}, gsl_sf_result * @var{result})
These routines compute the Sine integral
@math{Si(x) = \int_0^x dt \sin(t)/t}.
@comment Exceptional Return Values: none
@end deftypefun

 
@deftypefun double gsl_sf_Ci (const double @var{x})
@deftypefunx int gsl_sf_Ci_e (double @var{x}, gsl_sf_result * @var{result})
These routines compute the Cosine integral @math{Ci(x) = -\int_x^\infty dt
\cos(t)/t} for @math{x > 0}.  
@comment Domain: x > 0.0
@comment Exceptional Return Values: GSL_EDOM
@end deftypefun


@subsection Arctangent Integral

@deftypefun double gsl_sf_atanint (double @var{x})
@deftypefunx int gsl_sf_atanint_e (double @var{x}, gsl_sf_result * @var{result})
These routines compute the Arctangent integral @math{AtanInt(x) =
\int_0^x dt \arctan(t)/t}.
@comment Domain: 
@comment Exceptional Return Values: 
@end deftypefun
