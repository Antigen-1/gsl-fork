@cindex Special Functions

This chapter describes the GSL special function library.  The library
includes routines for calculating the values of Airy functions, Bessel
functions, Clausen functions, Coulomb wave functions, Coupling
coefficients, the Dawson function, Debye functions, Dilogarithms,
Elliptic integrals, Jacobi elliptic functions, Error functions,
Exponential integrals, Fermi-Dirac functions, Gamma functions,
Gegenbauer functions, Hypergeometric functions, Laguerre functions,
Legendre functions and Spherical Harmonics, Psi (Digamma) Function,
Synchrotron functions, Transport functions, Trigonometric functions and
Zeta functions.  Each routine also computes an estimate of the numerical
error in the calculated value of the function.

The functions are declared in individual header files, such as
@file{gsl_sf_airy.h}, @file{gsl_sf_bessel.h}, etc.  The complete set of
header files can be including the file @file{gsl_sf.h}.

@menu
* Special Function Usage::
* The gsl_sf_result struct::
* Special Function Modes::
* Airy Functions::
* Bessel Functions:: 
* Clausen Functions::
* Coulomb Wave Functions::
* Coupling Coefficients::
* Dawson Function::
* Debye Functions::
* Dilogarithm::
* Elementary Operations::
* Elliptic Integrals::
* Elliptic Functions (Jacobi)::
* Error Function::
* Exponential Function::
* Exponential Integrals::
* Fermi-Dirac Function::
* Gamma Function::
* Gegenbauer Functions::
* Hypergeometric Functions::
* Laguerre Functions::
* Legendre Functions and Spherical Harmonics::
* Logarithm and Related Functions::
* Power Function::
* Psi (Digamma) Function::
* Synchrotron Functions::
* Transport Functions::
* Trigonometric Functions::
* Zeta Functions::
* Special Functions Examples::
* Special Functions References and Further Reading::
@end menu

@include specfunc-result.texi
@include specfunc-airy.texi
@include specfunc-bessel.texi
@comment @include specfunc-chebyshev.texi
@include specfunc-clausen.texi
@include specfunc-coulomb.texi
@include specfunc-coupling.texi
@include specfunc-dawson.texi
@include specfunc-debye.texi
@include specfunc-dilog.texi
@include specfunc-elementary.texi
@include specfunc-ellint.texi
@include specfunc-elljac.texi
@include specfunc-erf.texi
@include specfunc-exp.texi
@include specfunc-expint.texi
@include specfunc-fermi-dirac.texi
@include specfunc-gamma.texi
@include specfunc-gegenbauer.texi
@include specfunc-hyperg.texi
@include specfunc-laguerre.texi
@include specfunc-legendre.texi
@include specfunc-log.texi
@include specfunc-pow-int.texi
@include specfunc-psi.texi
@include specfunc-synchrotron.texi
@include specfunc-transport.texi
@include specfunc-trig.texi
@include specfunc-zeta.texi

@node Special Functions Examples
@section Examples

The following example demonstrates the use of the error handling form of
the special functions, in this case to compute the Bessel function
@math{J_0(5.0)},

@example
#include <stdio.h>
#include <gsl/gsl_sf_bessel.h>

int
main ()
@{
  double x = 5.0;
  gsl_sf_result result;

  double expected = -0.17759677131433830434739701;
  
  int status = gsl_sf_bessel_J0_e (x, &result);

  printf("status  = %s\n", gsl_strerror(status));
  printf("J0(5.0) = %.18f +/- %.18f\n", result.val, result.err);
  printf("exact   = %.18f\n", expected);
@}
@end example
@noindent
Here are the results of running the program,
@example
$ ./a.out 
status  = success
J0(5.0) = -0.177596771314338292 +/- 0.000000000000000193
exact   = -0.177596771314338292
@end example
@noindent
The next program computes the same quantity using the natural form of
the function. In this case the error term @var{result.err} and return
status are not accessible.

@example
#include <stdio.h>
#include <gsl/gsl_sf_bessel.h>

int
main ()
@{
  double x = 5.0;
  double expected = -0.17759677131433830434739701;
  
  double y = gsl_sf_bessel_J0 (x);

  printf("J0(5.0) = %.18f\n", y);
  printf("exact   = %.18f\n", expected);
@}
@end example
@noindent
The results of the function are the same,
@example
$ ./a.out 
J0(5.0) = -0.177596771314338292
exact   = -0.177596771314338292
@end example



@node Special Functions References and Further Reading
@section References and Further Reading

@itemize @asis
@item
Abramowitz & Stegun (eds.), @cite{Handbook of Mathematical Functions}

@item
MISCFUN: A software package to compute uncommon special functions.
@cite{ACM Trans. Math. Soft.}, vol. 22, 1996, 288-301

Fermi-Dirac functions of orders -1/2 , 1/2 , 3/2 , and 5/2. 
@cite{ACM Trans. Math. Soft.}, vol. 24, 1998, 1-12.
@end itemize
