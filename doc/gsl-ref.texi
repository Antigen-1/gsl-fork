\input texinfo @c -*-texinfo-*-
@c This will be for the printing version of the manual
@tex
\gdef\paperbackbook{{\globaldefs = 1
  \parskip = 2pt plus 1pt
  \setleading{12pt}%
  %
  \internalpagesizes{7.5in}{5.in}{\voffset}{.25in}{\bindingoffset}{16pt}%
  %
  \lispnarrowing = 0.3in
  \tolerance = 700
  \hfuzz = 1pt
  \contentsrightmargin = 0pt
  \deftypemargin = 0pt
  \defbodyindent = .5cm
  %
  \let\smalldisplay = \smalldisplayx
  \let\smallexample = \smalllispx
  \let\smallformat = \smallformatx
  \let\smalllisp = \smalllispx
}}
@end tex
@c @cropmarks
@c @afourpaper
@c @paperbackbook
@c @set @publish
@raggedbottom
@c %**start of header
@setfilename gsl-ref.info
@settitle GNU Scientific Library -- Reference Manual
@finalout
@c @setchapternewpage odd
@c %**end of header

@dircategory Scientific software
@direntry
* gsl-ref: (gsl-ref).                   GNU Scientific Library -- Reference
@end direntry

@c How to use the math macros
@c ==========================
@c 
@c For simple expressions, simply use the @math{} command, e.g.
@c
@c     @math{\exp(x)/(1+x^2)}
@c 
@c but if the expression includes characters that need to be 'escaped'
@c in texinfo, like '{' or '}', or needs different output for TeX and info,
@c then use the following form,
@c
@c     blah blah blah @c{$y^{1+b} \le \pi$}
@c     @math{y^@{1+b@} <= \pi}
@c
@c The first part using @c{} must appear at the end of a line (it reads
@c up to the line end -- as far as texinfo is concerned it's actually
@c a 'comment').  The comment command @c has been modified to capture
@c a TeX expression which is output by the next @math.
@c
@c For ordinary comments use the @comment command.

@tex
% Mathematical macros taken from the GNU Calc Manual
% ==================================================
%
% Some special kludges to make TeX formatting prettier.
% Because makeinfo.c exists, we can't just define new commands.
% So instead, we take over little-used existing commands.
%
% Redefine @cite{text} to act like $text$ in regular TeX.
% Info will typeset this same as @samp{text}.
\gdef\goodtex{\tex \let\rm\goodrm \let\t\ttfont \turnoffactive}
\gdef\goodrm{\fam0\tenrm}
\gdef\math{\goodtex$\mathxxx}
\gdef\mathxxx#1{#1$\Etex}
\global\let\oldxrefX=\xrefX
\gdef\xrefX[#1]{\begingroup\let\math=\dfn\oldxrefX[#1]\endgroup}
%
% Redefine @i{text} to be equivalent to @cite{text}, i.e., to use math mode.
% This looks the same in TeX but omits the surrounding ` ' in Info.
%\global\let\i=\cite
%\global\let\math=\cite
%
% Redefine @c{tex-stuff} \n @whatever{info-stuff}.
\gdef\c{\futurelet\next\mycxxx}
\gdef\mycxxx{%
  \ifx\next\bgroup \goodtex\let\next\mycxxy
  \else\ifx\next\mindex \let\next\relax
  \else\ifx\next\kindex \let\next\relax
  \else\ifx\next\starindex \let\next\relax \else \let\next\comment
  \fi\fi\fi\fi \next
}
\gdef\mycxxy#1#2{#1\Etex\mycxxz}
\gdef\mycxxz#1{}
%
% Define \Hat to take over from \hat as an accent
\gdef\Hat{\mathaccent "705E}
%
\gdef\beforedisplay{\vskip-10pt}
\gdef\afterdisplay{\vskip-5pt}
\gdef\beforedisplayh{\vskip-25pt}
\gdef\afterdisplayh{\vskip-10pt}
%
\gdef\arcsec{\hbox{\rm arcsec}}
\gdef\arccsc{\hbox{\rm arccsc}}
\gdef\arccot{\hbox{\rm arccot}}
\gdef\sech{\hbox{\rm sech}}
\gdef\csch{\hbox{\rm csch}}
\gdef\coth{\hbox{\rm coth}}
\gdef\arcsinh{\hbox{\rm arcsinh}}
\gdef\arccosh{\hbox{\rm arccosh}}
\gdef\arctanh{\hbox{\rm arctanh}}
\gdef\arcsech{\hbox{\rm arcsech}}
\gdef\arccsch{\hbox{\rm arccsch}}
\gdef\arccoth{\hbox{\rm arccoth}}
%
\gdef\Re{\hbox{\rm Re}}
\gdef\Im{\hbox{\rm Im}}
\gdef\Sin{\hbox{\rm Sin}}
\gdef\Cos{\hbox{\rm Cos}}
\gdef\Log{\hbox{\rm Log}}
%
\gdef\erf{\hbox{\rm erf}}
\gdef\erfc{\hbox{\rm erfc}}
\gdef\sinc{\hbox{\rm sinc}}
@end tex

@include version-ref.texi
@set GSL @i{GNU Scientific Library}

@ifinfo
This file documents the @value{GSL}.

Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001 The GSL Team.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1
or any later version published by the Free Software Foundation;
with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
A copy of the license is included in the section entitled ``GNU
Free Documentation License''.

@ignore
Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.
@end ignore

@ignore
Permission is granted to process this file through TeX and print the
results, provided the printed document carries copying permission
notice identical to this one except for the removal of this paragraph
(this paragraph not being relevant to the printed manual).

@end ignore

@ignore
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation approved
by the GSL Team.
@end ignore
@end ifinfo

@titlepage
@title GNU Scientific Library
@subtitle Reference Manual
@subtitle Edition @value{EDITION}, for GSL Version @value{VERSION}
@subtitle @value{UPDATED}

@author Mark Galassi 
Cygnus Solutions and Los Alamos National Laboratory
@comment @email{rosalia@@lanl.gov}
@sp 1

@author Jim Davies 
Department of Computer Science, Georgia Institute of Technology
@comment @email{jimmyd@@nis.lanl.gov}
@sp 1

@author James Theiler 
Astrophysics and Radiation Measurements Group, Los Alamos National Laboratory
@comment @email{jt@@nis.lanl.gov}
@sp 1

@author Brian Gough 
Network Theory Limited
@comment @email{bjg@@network-theory.co.uk}
@sp 1

@comment Asked to be moved to 'contributors' appendix
@comment @author Reid Priedhorsky 
@comment Mathematical Modeling and Analysis Group, Los Alamos National Laboratory
@comment @email{rp@@lanl.gov}
@comment @sp 1

@author Gerard Jungman 
Theoretical Fluid Dynamics Group, Los Alamos National Laboratory
@comment @email{jungman@@lanl.gov}
@sp 1

@author Michael Booth
Department of Physics and Astronomy, The Johns Hopkins University
@comment @email{booth@@planck.pha.jhu.edu} or @email{booth@@debian.org}
@sp 1

@author Fabrice Rossi
University of Paris-Dauphine
@comment @email{rossi@@ufrmd.dauphine.fr}
@sp 1
@page
@vskip 0pt plus 1filll
@ifset publish
Published by Network Theory Limited.

15 Royal Park,
Clifton,
Bristol BS8 3AL,
United Kingdom.

@end ifset
Copyright @copyright{} 1996, 1997, 1998, 1999, 2000, 2001 The GSL Team.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1
or any later version published by the Free Software Foundation;
with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
A copy of the license is included in the section entitled ``GNU
Free Documentation License''.

@ignore
Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation approved
by the GSL Team.
@end ignore
@end titlepage

@ifset publish
@setchapternewpage odd
@contents
@setchapternewpage on
@end ifset

@ifinfo
@node Top, Introduction, (dir), (dir)
@top GSL
@end ifinfo

@ifinfo
This file documents the @value{GSL}, a collection of numerical
routines for scientific computing.

As of @value{UPDATED} the library is in beta-test release only and is
not recommended for general use.

More information about GSL can be found at the project homepage,
@url{http://sources.redhat.com/gsl/}.
@end ifinfo

@menu
* Introduction::                
* Using the library::           
* Error Handling::              
* Mathematical Functions::      
* Complex Numbers::             
* Roots of Polynomials::        
* Special Functions::           
* Vectors and Matrices::        
* Permutations::                
* Sorting::                     
* BLAS Support::                
* Linear Algebra::              
* Eigensystems::                
* Fast Fourier Transforms::     
* Numerical Integration::       
* Random Number Generation::    
* Quasi-Random Sequences::      
* Random Number Distributions::  
* Statistics::                  
* Histograms::                  
* N-tuples::                    
* Monte Carlo Integration::     
* Simulated Annealing::         
* Ordinary Differential Equations::  
* Interpolation::               
* Numerical Differentiation::   
* Chebyshev Approximations::    
* Series Acceleration::         
* Discrete Hankel Transforms::  
* One dimensional Root-Finding::  
* One dimensional Minimization::  
* Multidimensional Root-Finding::  
* Multidimensional Minimization::  
* Least-Squares Fitting::       
* Nonlinear Least-Squares Fitting::  
* Physical Constants::          
* IEEE floating-point arithmetic::  
* Debugging Numerical Programs::  
* Contributors to GSL::         
* Autoconf Macros::             
* GNU General Public License::  
* GNU Free Documentation License::  
* Concept Index::               
* Function Index::              
* Variable Index::              
* Type Index::                  
@end menu

@node  Introduction, Using the library, Top, Top
@chapter Introduction

The GNU Scientific Library (GSL) is a collection of routines for
numerical computing.  The routines are written from scratch by the GSL
team (@pxref{Contributors to GSL}) in C, and are meant to present a
modern Applications Programming Interface (API) for C programmers, while
allowing wrappers to be written for very high level languages.  The
source code is distributed under the GNU General Public License.

GSL is currently in beta-test release, for people who want to test the
library itself. When the library is complete and fully tested it will be
announced for general use.

@menu
* GSL is Free Software::        
@end menu

@node GSL is Free Software,  , Introduction, Introduction
@section GSL is Free Software

The subroutines in the GNU Scientific Library are ``free software'';
this means that everyone is free to use them, and to redistribute them
in other free programs.  The library should not be redistributed in
proprietary programs.  The library is not in the public domain; it is
copyrighted and there are conditions on its distribution.  These
conditions are designed to permit everything that a good cooperating
citizen would want to do.  What is not allowed is to try to prevent
others from further sharing any version of the software that they might
get from you.

Specifically, we want to make sure that you have the right to give away
copies of any programs related to the GNU Scientific Library, that you
receive their source code or else can get it if you want it, that you
can change these programs or use pieces of them in new free programs,
and that you know you can do these things. 

To make sure that everyone has such rights, we have to forbid you to
deprive anyone else of these rights.  For example, if you distribute
copies of any related code, you must give the recipients all the rights
that you have.  You must make sure that they, too, receive or can get
the source code.  And you must tell them their rights. 

Also, for our own protection, we must make certain that everyone finds
out that there is no warranty for the GNU Scientific Library.  If these
programs are modified by someone else and passed on, we want their
recipients to know that what they have is not what we distributed, so
that any problems introduced by others will not reflect on our
reputation.

The precise conditions for the distribution of software related to the
GNU Scientific Library are found in the GNU General Public License
(@pxref{GNU General Public License}).  Further information about this
license is available from the GNU Project webpage @cite{Frequently Asked
Questions about the GNU GPL},
@url{http://www.gnu.org/copyleft/gpl-faq.html}.

@node Using the library, Error Handling, Introduction, Top
@chapter Using the library
@cindex usage, compiling application programs
@include usage.texi

@node Error Handling, Mathematical Functions, Using the library, Top
@chapter Error Handling
@cindex Errors
@include err.texi

@node  Mathematical Functions, Complex Numbers, Error Handling, Top
@chapter Mathematical Functions
@include math.texi

@node Complex Numbers, Roots of Polynomials, Mathematical Functions, Top
@chapter Complex Numbers
@include complex.texi

@node  Roots of Polynomials, Special Functions, Complex Numbers, Top
@chapter Roots of Polynomials
@include poly.texi

@node Special Functions, Vectors and Matrices, Roots of Polynomials, Top
@chapter Special Functions
@include specfunc.texi

@node Vectors and Matrices, Permutations, Special Functions, Top
@chapter Vectors and Matrices
@include vectors.texi

@node   Permutations, Sorting, Vectors and Matrices, Top
@chapter Permutations
@include permutation.texi

@node  Sorting, BLAS Support, Permutations, Top
@chapter Sorting
@include sort.texi

@node BLAS Support, Linear Algebra, Sorting, Top
@chapter BLAS Support
@include blas.texi

@node Linear Algebra, Eigensystems, BLAS Support, Top
@chapter Linear Algebra
@include linalg.texi

@node Eigensystems, Fast Fourier Transforms, Linear Algebra, Top
@chapter Eigensystems
@include eigen.texi

@node Fast Fourier Transforms, Numerical Integration, Eigensystems, Top
@chapter Fast Fourier Transforms (FFTs)
@include fft.texi

@node Numerical Integration, Random Number Generation, Fast Fourier Transforms, Top
@chapter Numerical Integration
@include integration.texi

@node Random Number Generation, Quasi-Random Sequences, Numerical Integration, Top
@chapter Random Number Generation
@include rng.texi

@node Quasi-Random Sequences, Random Number Distributions, Random Number Generation, Top
@chapter Quasi-Random Sequences
@include qrng.texi

@node  Random Number Distributions, Statistics, Quasi-Random Sequences, Top
@chapter Random Number Distributions
@include randist.texi

@node Statistics, Histograms, Random Number Distributions, Top
@chapter Statistics
@include statistics.texi

@node Histograms, N-tuples, Statistics, Top
@chapter Histograms
@include histogram.texi

@node  N-tuples, Monte Carlo Integration, Histograms, Top
@chapter N-tuples
@include ntuple.texi

@node Monte Carlo Integration, Simulated Annealing, N-tuples, Top
@chapter Monte Carlo Integration
@include montecarlo.texi

@node Simulated Annealing, Ordinary Differential Equations, Monte Carlo Integration, Top
@chapter Simulated Annealing
@include siman.texi

@node Ordinary Differential Equations, Interpolation, Simulated Annealing, Top
@chapter Ordinary Differential Equations
@include ode-initval.texi

@node   Interpolation, Numerical Differentiation, Ordinary Differential Equations, Top
@chapter Interpolation
@include interp.texi

@node  Numerical Differentiation, Chebyshev Approximations, Interpolation, Top
@chapter Numerical Differentiation
@include diff.texi

@node  Chebyshev Approximations, Series Acceleration, Numerical Differentiation, Top
@chapter Chebyshev Approximations
@include cheb.texi

@node Series Acceleration, Discrete Hankel Transforms, Chebyshev Approximations, Top
@chapter Series Acceleration
@include sum.texi

@node  Discrete Hankel Transforms, One dimensional Root-Finding, Series Acceleration, Top
@chapter Discrete Hankel Transforms
@include dht.texi

@node  One dimensional Root-Finding, One dimensional Minimization, Discrete Hankel Transforms, Top
@chapter One dimensional Root-Finding
@include roots.texi

@node   One dimensional Minimization, Multidimensional Root-Finding, One dimensional Root-Finding, Top
@chapter One dimensional Minimization
@include min.texi

@node  Multidimensional Root-Finding, Multidimensional Minimization, One dimensional Minimization, Top
@chapter Multidimensional Root-Finding
@include multiroots.texi

@node   Multidimensional Minimization, Least-Squares Fitting, Multidimensional Root-Finding, Top
@chapter Multidimensional Minimization
@include multimin.texi

@node Least-Squares Fitting, Nonlinear Least-Squares Fitting, Multidimensional Minimization, Top
@chapter Least-Squares Fitting
@include fitting.texi

@node Nonlinear Least-Squares Fitting, Physical Constants, Least-Squares Fitting, Top
@chapter Nonlinear Least-Squares Fitting
@include multifit.texi

@node  Physical Constants, IEEE floating-point arithmetic, Nonlinear Least-Squares Fitting, Top
@chapter Physical Constants
@include const.texi

@node IEEE floating-point arithmetic, Debugging Numerical Programs, Physical Constants, Top
@chapter IEEE floating-point arithmetic
@include ieee754.texi

@node Debugging Numerical Programs, Contributors to GSL, IEEE floating-point arithmetic, Top
@appendix Debugging Numerical Programs
@include debug.texi

@node Contributors to GSL, Autoconf Macros, Debugging Numerical Programs, Top
@appendix Contributors to GSL

(See the AUTHORS file in the distribution for up-to-date information.)

@table @strong
@item Mark Galassi
Conceived GSL (with James Theiler) and wrote the design document.  Wrote
the simulated annealing package and the relevant chapter in the manual.

@item James Theiler
Conceived GSL (with Mark Galassi).  Wrote the random number generators
and the relevant chapter in this manual.

@item Jim Davies
Wrote the statistical routines and the relevant chapter in this
manual.

@item Brian Gough
FFTs, numerical integration, random number generators and distributions,
root finding, minimization and fitting, polynomial solvers, complex
numbers, physical constants, permutations, vector and matrix functions,
histograms, statistics, ieee-utils, revised @sc{cblas} Level 2 & 3, matrix
decompositions and eigensystems.

@item Reid Priedhorsky 
Wrote and documented the initial version of the root finding routines
while at Los Alamos National Laboratory, Mathematical Modeling and
Analysis Group.  
@comment email: reid@reidster.net

@item Gerard Jungman
series acceleration, ODEs, BLAS, Linear Algebra, Eigensystems,
Hankel Transforms.

@item Mike Booth
Wrote the Monte Carlo library.

@item Jorma Olavi T@"ahtinen 
Wrote the initial complex arithmetic functions.

@item  Thomas Walter 
Wrote the initial heapsort routines and cholesky decomposition.

@item  Fabrice Rossi
Multidimensional minimization.

@end table

@node  Autoconf Macros, GNU General Public License, Contributors to GSL, Top
@unnumbered Autoconf Macros

@noindent
The following autoconf test will check for extern inline,

@smallexample
dnl Check for "extern inline", using a modified version of the test
dnl for AC_C_INLINE from acspecific.mt
dnl
AC_CACHE_CHECK([for extern inline], ac_cv_c_extern_inline,
[ac_cv_c_extern_inline=no
AC_TRY_COMPILE([extern $ac_cv_c_inline double foo(double x);
extern $ac_cv_c_inline double foo(double x) @{ return x + 1.0 ; @} ;
double foo (double x) @{ return x + 1.0 ; @};], 
[  foo(1.0)  ],
[ac_cv_c_extern_inline="yes"])
])

if test "$ac_cv_c_extern_inline" != no ; then
  AC_DEFINE(HAVE_INLINE,1)
  AC_SUBST(HAVE_INLINE)
fi
@end smallexample


@comment @node  Copyright, GNU General Public License, Contributors to GSL, Top
@comment @unnumbered Copyright
@comment @include science.texi

@node  GNU General Public License, GNU Free Documentation License, Autoconf Macros, Top
@unnumbered GNU General Public License
@include gpl.texi

@node GNU Free Documentation License, Concept Index, GNU General Public License, Top
@unnumbered GNU Free Documentation License
@include fdl.texi

@comment htmlhelp: @bye

@iftex
@normalbottom
@end iftex

@node Concept Index, Function Index, GNU Free Documentation License, Top
@unnumbered Concept Index

@printindex cp

@node Function Index, Variable Index, Concept Index, Top
@unnumbered Function Index

@printindex fn

@node Variable Index, Type Index, Function Index, Top
@unnumbered Variable Index

@printindex vr

@node Type Index,  , Variable Index, Top
@unnumbered Type Index

@printindex tp

@comment Use @setchapternewpage odd to ensure that the contents starts 
@comment on an odd page so that it can always be moved to the front when 
@comment printing two-up.

@ifclear publish
@setchapternewpage odd
@comment -@shortcontents
@contents
@end ifclear

@bye
