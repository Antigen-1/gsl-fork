\input texinfo @c -*-texinfo-*-

@c %**start of header
@setfilename gsl-ref.info
@settitle GNU Scientific Library -- Reference Manual
@finalout
@c @setchapternewpage odd
@c %**end of header

@dircategory Scientific software
@direntry
* gsl-ref: (gsl-ref).                   GNU Scientific Library -- Reference
@end direntry

@tex
% Some special kludges to make TeX formatting prettier.
% Because makeinfo.c exists, we can't just define new commands.
% So instead, we take over little-used existing commands.
%
% Redefine @cite{text} to act like $text$ in regular TeX.
% Info will typeset this same as @samp{text}.
\gdef\goodtex{\tex \let\rm\goodrm \let\t\ttfont \turnoffactive}
\gdef\goodrm{\fam0\tenrm}
\gdef\math{\goodtex$\mathxxx}
\gdef\mathxxx#1{#1$\Etex}
\global\let\oldxrefX=\xrefX
\gdef\xrefX[#1]{\begingroup\let\math=\dfn\oldxrefX[#1]\endgroup}
%
% Redefine @i{text} to be equivalent to @cite{text}, i.e., to use math mode.
% This looks the same in TeX but omits the surrounding ` ' in Info.
%\global\let\i=\cite
%\global\let\math=\cite
%
% Redefine @c{tex-stuff} \n @whatever{info-stuff}.
\gdef\c{\futurelet\next\mycxxx}
\gdef\mycxxx{%
  \ifx\next\bgroup \goodtex\let\next\mycxxy
  \else\ifx\next\mindex \let\next\relax
  \else\ifx\next\kindex \let\next\relax
  \else\ifx\next\starindex \let\next\relax \else \let\next\comment
  \fi\fi\fi\fi \next
}
\gdef\mycxxy#1#2{#1\Etex\mycxxz}
\gdef\mycxxz#1{}
%
% Define \Hat to take over from \hat as an accent
\gdef\Hat{\mathaccent "705E}
%
\gdef\beforedisplay{\vskip-10pt}
\gdef\afterdisplay{\vskip-5pt}
\gdef\beforedisplayh{\vskip-25pt}
\gdef\afterdisplayh{\vskip-10pt}
@end tex

@include version-ref.texi
@set GSL @emph{GNU Scientific Library}

@ifinfo
This file documents the @value{GSL}.

Copyright (C) 1996, 1997, 1998, 1999 The GSL Project.

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

@ignore
Permission is granted to process this file through TeX and print the
results, provided the printed document carries copying permission
notice identical to this one except for the removal of this paragraph
(this paragraph not being relevant to the printed manual).

@end ignore
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation approved
by the Foundation.
@end ifinfo

@titlepage
@title GNU Scientific Library -- Reference Manual
@subtitle Edition @value{EDITION}, for gsl Version @value{VERSION}
@subtitle @value{UPDATED}

@author Mark Galassi 
Cygnus Solutions and Los Alamos National Laboratory @*
@email{rosalia@@nis.lanl.gov}
@sp 1

@author Jim Davies 
Space Data Systems Group, Los Alamos National Laboratory and 
Department of Computer Science, Georgia Institute of Technology @*
@email{jimmyd@@nis.lanl.gov}
@sp 1

@author James Theiler 
Astrophysics and Radiation Measurements Group, Los Alamos National Laboratory @*
@email{jt@@nis.lanl.gov}
@sp 1

@author Brian Gough 
Network Theory Limited, UK @*
@email{bjg@@network-theory.co.uk}
@sp 1

@author Reid Priedhorsky 
Mathematical Modeling and Analysis Group, Los Alamos National Laboratory @*
@email{rp@@lanl.gov}
@sp 1

@author Gerard Jungman 
Theoretical Particle Physics Group, Los Alamos National Laboratory @*
@email{jungman@@lanl.gov}
@sp 1

@author Michael Booth
Department of Physics and Astronomy, The Johns Hopkins University @*
@email{booth@@planck.pha.jhu.edu} or @email{booth@@debian.org}
@sp 1
@page
@vskip 0pt plus 1filll
Copyright @copyright{} 1996, 1997, 1998, 1999 The GSL Project.

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation approved
by the Foundation.
@end titlepage

@ifinfo
@node Top, Preliminaries, (dir), (dir)
@top GSL
@end ifinfo

@ifinfo
This file documents the @value{GSL}, a collection of numerical
routines for scientific computing.

As of @value{UPDATED}, the complete packages are the random number suite
(@pxref{Random Number Generation}), the FFT package (@pxref{FFTs}), the
simulated annealing package (@pxref{Simulated Annealing}) and the root
finding package (@pxref{Root finding}).  Work is under way on a special
function library and numerical integration.
@end ifinfo

@menu
* Preliminaries::               
* Using the library::           
* Error handling in GSL::       
* Random Number Generation::    
* Random Number Distributions::  
* Statistics::                  
* FFTs::                        
* Root finding::                
* Special Functions::           
* Series Acceleration::         
* Simulated Annealing::         
* Vectors and Matrices::        
* Histograms::                  
* Numerical Integration::       
* Monte Carlo Integration::     
* The IEEE standard for floating-point arithmetic::  
* Debugging Numerical Programs::  
* Contributors to GSL::         
* Copying::                     
* Concept Index::               
* Function Index::              
* Variable Index::              
* Type Index::                  
@end menu

@node Preliminaries, Using the library, Top, Top
@chapter Preliminaries

The GNU Scientific Library (GSL) is a collection of routines for
numerical analysis.  The routines are written from scratch by the GSL
team (@pxref{Contributors to GSL}) in C, and are meant to present a
modern Applications Programming Interface (API) for C programmers, while
allowing wrappers to be written for very high level languages.

@c Section on using the library
@node Using the library, Error handling in GSL, Preliminaries, Top
@chapter Using the library
@cindex usage, compiling application programs
@include usage.texi

@c Section on error handling
@node Error handling in GSL, Random Number Generation, Using the library, Top
@chapter Error handling in GSL
@cindex Errors
@include err.texi

@c Section on random number generation
@node Random Number Generation, Random Number Distributions, Error handling in GSL, Top
@chapter Random Number Generation
@include rng.texi

@node  Random Number Distributions, Statistics, Random Number Generation, Top
@chapter Random Number Distributions
@include randist.texi

@c Section on statistics
@node Statistics, FFTs, Random Number Distributions, Top
@chapter Statistics
@include statistics.texi

@c Section on FFTs
@node FFTs, Root finding, Statistics, Top
@chapter Fast Fourier Transforms (FFTs)
@include fft.texi

@c Section on root finding
@node Root finding, Special Functions, FFTs, Top
@chapter Root finding
@include roots.texi

@c Section on special functions
@node Special Functions, Series Acceleration, Root finding, Top
@chapter Special Functions
@include specfunc.texi

@c Section on series acceleration
@node Series Acceleration, Simulated Annealing, Special Functions, Top
@chapter Series Acceleration
@include sum.texi

@c Section on simulated annealing
@node Simulated Annealing, Vectors and Matrices, Series Acceleration, Top
@chapter Simulated Annealing
@include siman.texi

@node Vectors and Matrices, Histograms, Simulated Annealing, Top
@chapter Vectors and Matrices
@include vectors.texi

@node Histograms, Numerical Integration, Vectors and Matrices, Top
@chapter Histograms
@include histogram.texi

@node Numerical Integration, Monte Carlo Integration, Histograms, Top
@chapter Numerical Integration
@include integration.texi

@node Monte Carlo Integration, The IEEE standard for floating-point arithmetic, Numerical Integration, Top
@chapter Monte Carlo Integration
@include montecarlo.texi

@node  The IEEE standard for floating-point arithmetic, Debugging Numerical Programs, Monte Carlo Integration, Top
@chapter The IEEE standard for floating-point arithmetic
@include ieee754.texi

@node Debugging Numerical Programs, Contributors to GSL, The IEEE standard for floating-point arithmetic, Top
@appendix Debugging Numerical Programs
@include debug.texi

@node Contributors to GSL, Copying, Debugging Numerical Programs, Top
@appendix Contributors to GSL

@table @strong
@item Mark Galassi
Conceived GSL (with James Theiler) and wrote the design document. Wrote
the simulated annealing package and the relevant chapter in the manual.

@item James Theiler
Conceived GSL (with Mark Galassi).  Wrote the random number generators
and the relevant chapter in this manual.

@item Jim Davies
Wrote the statistical routines and the relevant chapter in this
manual.

@item Brian Gough
Wrote the FFT package and the relevant chapter in this manual.  Also
wrote the error handling infrastructure.

@item Reid Priedhorsky
Wrote the root finding package and the relevant chapter in this manual.

@item Gerard Jungman
Wrote the special function library, discrete hankel transforms,
the rudimentary linear algebra functions, and the original version
of the acceleration (Levin U) transforms.

@item Mike Booth
Wrote the Monte Carlo library.

@end table


@node Copying, Concept Index, Contributors to GSL, Top
@appendix Copying

   The subroutines and source code in the @value{GSL} package are
``free''; this means that everyone is free to use them and free to
redistribute them on a free basis.  The @value{GSL}-related programs are
not in the public domain; they are copyrighted and there are
restrictions on their distribution, but these restrictions are designed
to permit everything that a good cooperating citizen would want to do.
What is not allowed is to try to prevent others from further sharing any
version of these programs that they might get from you.

   Specifically, we want to make sure that you have the right to give
away copies of the programs that relate to @value{GSL}, that you receive
source code or else can get it if you want it, that you can change these
programs or use pieces of them in new free programs, and that you know
you can do these things.

   To make sure that everyone has such rights, we have to forbid you to
deprive anyone else of these rights.  For example, if you distribute
copies of the @value{GSL}-related code, you must give the recipients all
the rights that you have.  You must make sure that they, too, receive or
can get the source code.  And you must tell them their rights.

   Also, for our own protection, we must make certain that everyone
finds out that there is no warranty for the programs that relate to
@value{GSL}.  If these programs are modified by someone else and passed
on, we want their recipients to know that what they have is not what we
distributed, so that any problems introduced by others will not reflect
on our reputation.

   The precise conditions of the licenses for the programs currently
being distributed that relate to @value{GSL} are found in the General
Public Licenses that accompany them.

@node Concept Index, Function Index, Copying, Top
@unnumbered Concept Index

@printindex cp

@node Function Index, Variable Index, Concept Index, Top
@unnumbered Function Index

@printindex fn

@node Variable Index, Type Index, Function Index, Top
@unnumbered Variable Index

@printindex vr

@node Type Index,  , Variable Index, Top
@unnumbered Type Index

@printindex tp

@c -@shortcontents
@contents
@bye
