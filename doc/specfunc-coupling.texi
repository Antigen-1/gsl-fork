@comment
@node Coupling Coefficients
@section Coupling Coefficients
@cindex 3j symbols
@cindex 6j symbols
@cindex 9j symbols
@cindex Wigner coefficients
@cindex Racah coefficients


Since the arguments of the standard coupling coefficient functions
are integer or half-integer, the arguments of the following functions
are by convention integers equal to twice the actual spin value.


@subsection 3j Symbols

@tex
\beforedisplay
$$
\pmatrix{ja & jb & jc\cr
         ma & mb & mc\cr}
$$
\afterdisplay
@end tex
@ifinfo
@example
(ja jb jc
 ma mb mc)
@end example
@end ifinfo
@noindent


@deftypefun double gsl_sf_coupling_3j (int @var{two_ja}, int @var{two_jb}, int @var{two_jc}, int @var{two_ma}, int @var{two_mb}, int @var{two_mc})
@deftypefunx int gsl_sf_coupling_3j_e (int @var{two_ja}, int @var{two_jb}, int @var{two_jc}, int @var{two_ma}, int @var{two_mb}, int @var{two_mc}, gsl_sf_result * @var{result})
These routines compute the Clebsch-Gordan coefficients 
@comment Exceptional Return Values: GSL_EDOM, GSL_EOVRFLW
@end deftypefun



@subsection 6j Symbols

@multitable {abc} {abc} {abc}
@item ja @tab jb @tab jc
@item jd @tab je @tab jf
@end multitable

@deftypefun double gsl_sf_coupling_6j (int @var{two_ja}, int @var{two_jb}, int @var{two_jc}, int @var{two_jd}, int @var{two_je}, int @var{two_jf})
@deftypefunx int gsl_sf_coupling_6j_e (int @var{two_ja}, int @var{two_jb}, int @var{two_jc}, int @var{two_jd}, int @var{two_je}, int @var{two_jf}, gsl_sf_result * @var{result}) 
@comment Exceptional Return Values: GSL_EDOM, GSL_EOVRFLW
@end deftypefun



@subsection 9j Symbols

@multitable {abc} {abc} {abc}
@item ja @tab jb @tab jc
@item jd @tab je @tab jf
@item jg @tab jh @tab ji
@end multitable

@deftypefun double gsl_sf_coupling_9j (int @var{two_ja}, int @var{two_jb}, int @var{two_jc}, int @var{two_jd}, int @var{two_je}, int @var{two_jf}, int @var{two_jg}, int @var{two_jh}, int @var{two_ji})
@deftypefunx int gsl_sf_coupling_9j_e (int @var{two_ja}, int @var{two_jb}, int @var{two_jc}, int @var{two_jd}, int @var{two_je}, int @var{two_jf}, int @var{two_jg}, int @var{two_jh}, int @var{two_ji}, gsl_sf_result * @var{result}) 
@comment Exceptional Return Values: GSL_EDOM, GSL_EOVRFLW
@end deftypefun
