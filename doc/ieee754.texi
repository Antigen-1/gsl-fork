To be written

@c to turn on math exception handling use __setfpucw, see
@c /usr/include/i386/fpu_control.h

@c e.g.

@c #include <math.h>
@c #include <stdio.h>
@c #include <fpu_control.h>

@c double f (double x) ;

@c int main ()
@c {
@c   double a = 0 ;
@c   double y, z ;

@c   __setfpucw(0x1372); 


@deftypefun void gsl_ieee_printf_float (const float * @var{x})
@deftypefunx void gsl_ieee_printf_double (const double * @var{x})
@end deftypefun

@example
#include <stdio.h>
#include <gsl_ieee_utils.h>

main () 
@{
  float f = 1.0/3.0 ;
  double d = 1.0/3.0 ;

  double fd = f ; /* promote from float to double */
  
  printf("     float 1/3 = ") ; gsl_ieee_printf_float(&f) ; printf("\n") ;
  printf("promoted float = ") ; gsl_ieee_printf_double(&fd) ; printf("\n") ;
  printf("    double 1/3 = ") ; gsl_ieee_printf_double(&d) ; printf("\n") ;
@}
@end example


@example
     float 1/3 =  1.01010101010101010101011*2^-2
promoted float =  1.0101010101010101010101100000000000000000000000000000*2^-2
    double 1/3 =  1.0101010101010101010101010101010101010101010101010101*2^-2
@end example

To use these numbers in Calc, precede them by @code{2#} to indicate binary.
In @code{bc}, work with the mantissa separately from the exponent.




