This chapter describes functions for creating histograms. 

@section The histogram struct

@example
typedef struct @{
  size_t nbins ;
  double range[] ;
  double bin[] ;
@} gsl_histogram 
@end example


@section Histogram allocation

@deftypefun {gsl_histogram *} gsl_histogram_alloc (size_t n)
@end deftypefun

@deftypefun {gsl_histogram *} gsl_histogram_alloc_uniform (size_t n, double xmin, double xmax)
@end deftypefun

@deftypefun void gsl_histogram_free (gsl_histogram * h)
@end deftypefun

@section Accessing histogram elements

@deftypefun int gsl_histogram_increment (gsl_histogram * h, double x)
@end deftypefun

@deftypefun int gsl_histogram_accumulate (gsl_histogram * h, double x, double weight)
@end deftypefun

@deftypefun int gsl_histogram_find (const gsl_histogram * h, double x, size_t * i)
@end deftypefun
@deftypefun int gsl_histogram_find_impl (size_t n, const double range[], double x, size_t * i)
@end deftypefun

@deftypefun double gsl_histogram_get (const gsl_histogram * h, size_t i)
@end deftypefun
@deftypefun double gsl_histogram_get_lowerlimit (const gsl_histogram * h, size_t i)
@end deftypefun
@deftypefun double gsl_histogram_get_upperlimit (const gsl_histogram * h, size_t i)
@end deftypefun
                                     
@deftypefun double gsl_histogram_max (const gsl_histogram * h)
@end deftypefun
@deftypefun double gsl_histogram_min (const gsl_histogram * h)
@end deftypefun
@deftypefun size_t gsl_histogram_nbins (const gsl_histogram * h)
@end deftypefun

@deftypefun void gsl_histogram_reset (gsl_histogram * h)
@end deftypefun

@section Reading and writing histograms

@deftypefun int gsl_histogram_fread (FILE * stream, gsl_histogram * h)
@end deftypefun
@deftypefun int gsl_histogram_fwrite (FILE * stream, const gsl_histogram * h) 
@end deftypefun
@deftypefun int gsl_histogram_fprintf (FILE * stream, gsl_histogram * h, const char * format)
@end deftypefun
@deftypefun int gsl_histogram_fscanf (FILE * stream, gsl_histogram * h)
@end deftypefun

@section Resampling from histograms

@deftypefun {gsl_histogram_pdf *} gsl_histogram_pdf_alloc (const gsl_histogram * h)
@end deftypefun
@deftypefun void gsl_histogram_pdf_free (gsl_histogram_pdf * p)
@end deftypefun
@deftypefun double gsl_histogram_pdf_sample (const gsl_histogram_pdf * p, double r)
@end deftypefun


@section Example programs for histograms

@section Two dimensional histograms

@example
typedef struct {
  size_t nx, ny ;
  double * xrange ;
  double * yrange ;
  double * bin ;
} gsl_histogram2d
@end example


gsl_histogram2d * gsl_histogram2d_alloc (size_t nx, size_t ny);
gsl_histogram2d * gsl_histogram2d_alloc_uniform (size_t nx, size_t ny,
                                             double xmin, double xmax,
                                             double ymin, double ymax);

void gsl_histogram2d_free (gsl_histogram2d * h);

int gsl_histogram2d_increment (gsl_histogram2d * h, double x, double y);
int gsl_histogram2d_accumulate (gsl_histogram2d * h, 
                                double x, double y, double weight);
int gsl_histogram2d_find (const gsl_histogram2d * h, 
                          double x, double y, size_t * i, size_t * j);
int gsl_histogram2d_find_impl (const gsl_histogram2d * h, 
                               double x, double y, size_t * i, size_t * j);

double gsl_histogram2d_get (const gsl_histogram2d * h, size_t i, size_t j);
double gsl_histogram2d_get_xlowerlimit (const gsl_histogram2d * h, size_t i);
double gsl_histogram2d_get_xupperlimit (const gsl_histogram2d * h, size_t i);
double gsl_histogram2d_get_ylowerlimit (const gsl_histogram2d * h, size_t j);
double gsl_histogram2d_get_yupperlimit (const gsl_histogram2d * h, size_t j);
                                     
double gsl_histogram2d_xmax (const gsl_histogram2d * h);
double gsl_histogram2d_xmin (const gsl_histogram2d * h);
size_t gsl_histogram2d_nx (const gsl_histogram2d * h);

double gsl_histogram2d_ymax (const gsl_histogram2d * h);
double gsl_histogram2d_ymin (const gsl_histogram2d * h);
size_t gsl_histogram2d_ny (const gsl_histogram2d * h);

void gsl_histogram2d_reset (gsl_histogram2d * h);

int gsl_histogram2d_fread (FILE * stream, gsl_histogram2d * h);
int gsl_histogram2d_fwrite (FILE * stream, const gsl_histogram2d * h) ;
int gsl_histogram2d_fprintf (FILE * stream, gsl_histogram2d * h, 
                           const char * format);
int gsl_histogram2d_fscanf (FILE * stream, gsl_histogram2d * h);

gsl_histogram2d_pdf * gsl_histogram2d_pdf_alloc (const gsl_histogram2d * h);
void gsl_histogram2d_pdf_free (gsl_histogram2d_pdf * p);
int gsl_histogram2d_pdf_sample (const gsl_histogram2d_pdf * p, 
                                   double r1, double r2, 
                                   double * x, double * y);
