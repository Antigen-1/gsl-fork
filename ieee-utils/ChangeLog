Fri Aug 20 12:17:53 1999  Brian Gough  <bjg@network-theory.co.uk>

	* fp-tru64.c (gsl_ieee_set_mode): note that INEXACT is not easily
 	supported on Tru64, and give an error if anyone tries to use it

Tue Aug 17 18:36:01 1999  Tim Mooney <mooney@plains.NoDak.edu>
 
       	* fp-tru64.c: added, based on solaris and HP-UX fp-* files.
  	Rounding mode and trap control requires that the compiler be
 	passed special options, see the comments in fp-tru64.c.
 
Fri Jul 23 19:00:51 1999  Brian Gough  <bjg@network-theory.co.uk>

	* print.c: added fprintf versions of the printf functions

Sat May  8 20:39:28 1999  Brian Gough  <bjg@network-theory.co.uk>

	* fp-linux.c (gsl_ieee_set_mode): changed from using the function
 	__fput_setcw() to the macro _FPU_SETCW() since Khimenko Victor
 	<khim@sch57.msk.ru> reports that __setfpucw() is not in the shared
 	lib version of glibc-2.1.1

Fri Apr  2 20:52:59 1999  Brian Gough  <bjg@netsci.freeserve.co.uk>

	* endian.c (setup_dynamic_endianness): removed useless test,
 	u.c[i]<0 for unsigned

Fri Aug 21 15:36:22 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* fp-unknown.c (gsl_ieee_set_mode): made return type int, as it
 	should be

Mon Jun 15 22:02:00 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* renamed read-mode-string.c to read.c and print-ieee.c to print.c

Tue Jun  2 19:29:34 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* gsl_ieee_utils.h: renamed GSL_IEEE_CATCH_INEXACT to
 	GSL_IEEE_TRAP_INEXACT, which is a better name

Mon Jun  1 15:27:08 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* fp-sunos4.c: support for sunos4 IEEE interface

	* fp-solaris.c: support for solaris IEEE interface

	* renamed fp-mode-string.c to fp-env.c, in order to avoid short
 	filename problems

	* added support for setting the IEEE mode from the environment
	variable GSL_IEEE_MODE (only works for the Linux kernel so far)

Mon May 18 16:20:17 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* The determination of endianness is now done on each call instead
 	of at configure time (autoconf complains about what would happen
 	to the test if it were cross compiling). Ok, so it's a bit slower
	but this isn't a performance critical routine.

Sat May 16 23:10:09 1998  Brian Gough  <bjg@vvv.lanl.gov>

	* This directory contains some routines for examining IEEE format
 	numbers at the bit level

