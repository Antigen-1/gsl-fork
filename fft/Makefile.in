# Makefile.in generated automatically by automake 1.2 from Makefile.am

# Copyright (C) 1994, 1995, 1996, 1997 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.


SHELL = /bin/sh

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = true
PRE_INSTALL = true
POST_INSTALL = true
NORMAL_UNINSTALL = true
PRE_UNINSTALL = true
POST_UNINSTALL = true
host_alias = @host_alias@
host_triplet = @host@
CC = @CC@
CPP = @CPP@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
VERSION = @VERSION@

noinst_LIBRARIES = libfft.a 

bin_PROGRAMS = test_trap test_radix2 test benchmark errs

include_HEADERS = gsl_fft.h gsl_fft_complex.h gsl_fft_halfcomplex.h gsl_fft_real.h gsl_fft_signals.h gsl_dft_complex.h gsl_complex.h gsl_math.h

INCLUDES = -I$(srcdir)/../err

TESTS = test_trap test_radix2 test

test_LDADD = libfft.a ../err/liberr.a
test_trap_LDADD = libfft.a ../err/liberr.a
test_radix2_LDADD = libfft.a ../err/liberr.a
errs_LDADD = libfft.a ../err/liberr.a
benchmark_LDADD = libfft.a ../err/liberr.a

test_DEPENDENCIES = libfft.a
test_trap_DEPENDENCIES = libfft.a
test_radix2_DEPENDENCIES = libfft.a
benchmark_DEPENDENCIES = libfft.a

test_SOURCES = test.c
test_trap_SOURCES = test_trap.c
test_radix2_SOURCES = test_radix2.c
benchmark_SOURCES = benchmark.c 

libfft_a_SOURCES = \
autotest.c autotest.h \
compare.c compare.h \
gsl_complex.h \
dft_complex.c \
gsl_dft_complex.h \
 \
gsl_fft.h \
benchmark.c \
 \
complex.c \
gsl_fft_complex.h \
complex_init.c \
complex_pass_2.c \
complex_pass_3.c \
complex_pass_4.c \
complex_pass_5.c \
complex_pass_6.c \
complex_pass_7.c \
complex_pass_n.c \
complex_radix2.c \
 \
factorize.c \
bitreverse.c \
 \
halfcomplex.c \
gsl_fft_halfcomplex.h \
halfcomplex_init.c \
halfcomplex_pass_2.c \
halfcomplex_pass_3.c \
halfcomplex_pass_4.c \
halfcomplex_pass_5.c \
halfcomplex_pass_n.c \
halfcomplex_radix2.c \
halfcomplex_unpack.c \
 \
real.c \
gsl_fft_real.h \
real_init.c \
real_pass_2.c \
real_pass_3.c \
real_pass_4.c \
real_pass_5.c \
real_pass_n.c \
real_radix2.c \
real_unpack.c \
 \
signals.c \
 \
gsl_math.h
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
LIBRARIES =  $(noinst_LIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
libfft_a_LIBADD = 
libfft_a_OBJECTS =  autotest.o compare.o dft_complex.o benchmark.o \
complex.o complex_init.o complex_pass_2.o complex_pass_3.o \
complex_pass_4.o complex_pass_5.o complex_pass_6.o complex_pass_7.o \
complex_pass_n.o complex_radix2.o factorize.o bitreverse.o \
halfcomplex.o halfcomplex_init.o halfcomplex_pass_2.o \
halfcomplex_pass_3.o halfcomplex_pass_4.o halfcomplex_pass_5.o \
halfcomplex_pass_n.o halfcomplex_radix2.o halfcomplex_unpack.o real.o \
real_init.o real_pass_2.o real_pass_3.o real_pass_4.o real_pass_5.o \
real_pass_n.o real_radix2.o real_unpack.o signals.o
AR = ar
PROGRAMS =  $(bin_PROGRAMS)

test_trap_OBJECTS =  test_trap.o
test_trap_LDFLAGS = 
test_radix2_OBJECTS =  test_radix2.o
test_radix2_LDFLAGS = 
test_OBJECTS =  test.o
test_LDFLAGS = 
benchmark_OBJECTS =  benchmark.o
benchmark_LDFLAGS = 
errs_SOURCES = errs.c
errs_OBJECTS =  errs.o
errs_DEPENDENCIES =  libfft.a ../err/liberr.a
errs_LDFLAGS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
LINK = $(CC) $(CFLAGS) $(LDFLAGS) -o $@
HEADERS =  $(include_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP = --best
DEP_FILES =  .deps/autotest.P .deps/benchmark.P .deps/bitreverse.P \
.deps/compare.P .deps/complex.P .deps/complex_init.P \
.deps/complex_pass_2.P .deps/complex_pass_3.P .deps/complex_pass_4.P \
.deps/complex_pass_5.P .deps/complex_pass_6.P .deps/complex_pass_7.P \
.deps/complex_pass_n.P .deps/complex_radix2.P .deps/dft_complex.P \
.deps/errs.P .deps/factorize.P .deps/halfcomplex.P \
.deps/halfcomplex_init.P .deps/halfcomplex_pass_2.P \
.deps/halfcomplex_pass_3.P .deps/halfcomplex_pass_4.P \
.deps/halfcomplex_pass_5.P .deps/halfcomplex_pass_n.P \
.deps/halfcomplex_radix2.P .deps/halfcomplex_unpack.P .deps/real.P \
.deps/real_init.P .deps/real_pass_2.P .deps/real_pass_3.P \
.deps/real_pass_4.P .deps/real_pass_5.P .deps/real_pass_n.P \
.deps/real_radix2.P .deps/real_unpack.P .deps/signals.P .deps/test.P \
.deps/test_radix2.P .deps/test_trap.P
SOURCES = $(libfft_a_SOURCES) $(test_trap_SOURCES) $(test_radix2_SOURCES) $(test_SOURCES) $(benchmark_SOURCES) errs.c
OBJECTS = $(libfft_a_OBJECTS) $(test_trap_OBJECTS) $(test_radix2_OBJECTS) $(test_OBJECTS) $(benchmark_OBJECTS) errs.o

default: all

.SUFFIXES:
.SUFFIXES: .c .o
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu fft/Makefile

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-noinstLIBRARIES:

clean-noinstLIBRARIES:
	test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

distclean-noinstLIBRARIES:

maintainer-clean-noinstLIBRARIES:

.c.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	rm -f *.o core

clean-compile:

distclean-compile:
	rm -f *.tab.c

maintainer-clean-compile:

libfft.a: $(libfft_a_OBJECTS) $(libfft_a_DEPENDENCIES)
	rm -f libfft.a
	$(AR) cru libfft.a $(libfft_a_OBJECTS) $(libfft_a_LIBADD)
	$(RANLIB) libfft.a

mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "  $(INSTALL_PROGRAM) $$p $(bindir)/`echo $$p|sed '$(transform)'`"; \
	     $(INSTALL_PROGRAM) $$p $(bindir)/`echo $$p|sed '$(transform)'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(bindir)/`echo $$p|sed '$(transform)'`; \
	done

test_trap: $(test_trap_OBJECTS) $(test_trap_DEPENDENCIES)
	@rm -f test_trap
	$(LINK) $(test_trap_LDFLAGS) $(test_trap_OBJECTS) $(test_trap_LDADD) $(LIBS)

test_radix2: $(test_radix2_OBJECTS) $(test_radix2_DEPENDENCIES)
	@rm -f test_radix2
	$(LINK) $(test_radix2_LDFLAGS) $(test_radix2_OBJECTS) $(test_radix2_LDADD) $(LIBS)

test: $(test_OBJECTS) $(test_DEPENDENCIES)
	@rm -f test
	$(LINK) $(test_LDFLAGS) $(test_OBJECTS) $(test_LDADD) $(LIBS)

benchmark: $(benchmark_OBJECTS) $(benchmark_DEPENDENCIES)
	@rm -f benchmark
	$(LINK) $(benchmark_LDFLAGS) $(benchmark_OBJECTS) $(benchmark_LDADD) $(LIBS)

errs: $(errs_OBJECTS) $(errs_DEPENDENCIES)
	@rm -f errs
	$(LINK) $(errs_LDFLAGS) $(errs_OBJECTS) $(errs_LDADD) $(LIBS)

install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(includedir)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  echo " $(INSTALL_DATA) $(srcdir)/$$p $(includedir)/$$p"; \
	  $(INSTALL_DATA) $(srcdir)/$$p $(includedir)/$$p; \
	done

uninstall-includeHEADERS:
	$(NORMAL_UNINSTALL)
	list='$(include_HEADERS)'; for p in $$list; do \
	  rm -f $(includedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES)
	here=`pwd` && cd $(srcdir) && mkid -f$$here/ID $(SOURCES) $(HEADERS)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES)
	tags=; \
	here=`pwd`; \
	test -z "$(ETAGS_ARGS)$(SOURCES)$(HEADERS)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $(SOURCES) $(HEADERS) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = fft

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu fft/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  test -f $(distdir)/$$file \
	  || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $$d/$$file $(distdir)/$$file; \
	done

MKDEP = gcc -M $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)
-include .deps/.P
.deps/.P: $(BUILT_SOURCES)
	echo > $@

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:

maintainer-clean-depend:
	rm -rf .deps

.deps/%.P: %.c
	@echo "Computing dependencies for $<..."
	@o='o'; \
	test -n "$o" && o='$$o'; \
	$(MKDEP) $< >$@.tmp \
	  && sed "s,^\(.*\)\.o:,\1.$$o \1.l$$o $@:," < $@.tmp > $@ \
	  && rm -f $@.tmp
check-TESTS: $(TESTS)
	@failed=0; all=0; \
	srcdir=$(srcdir); export srcdir; \
	for tst in $(TESTS); do \
	  if test -f $$tst; then dir=.; \
	  else dir="$(srcdir)"; fi; \
	  if $(TESTS_ENVIRONMENT) $$dir/$$tst; then \
	    all=`expr $$all + 1`; \
	    echo "PASS: $$tst"; \
	  elif test $$? -ne 77; then \
	    all=`expr $$all + 1`; \
	    failed=`expr $$failed + 1`; \
	    echo "FAIL: $$tst"; \
	  fi; \
	done; \
	if test "$$failed" -eq 0; then \
	  banner="All $$all tests passed"; \
	else \
	  banner="$$failed of $$all tests failed"; \
	fi; \
	dashes=`echo "$$banner" | sed s/./=/g`; \
	echo "$$dashes"; \
	echo "$$banner"; \
	echo "$$dashes"; \
	test "$$failed" -eq 0
info:
dvi:
check: all
	$(MAKE) check-TESTS
installcheck:
install-exec: install-binPROGRAMS
	@$(NORMAL_INSTALL)

install-data: install-includeHEADERS
	@$(NORMAL_INSTALL)

install: install-exec install-data all
	@:

uninstall: uninstall-binPROGRAMS uninstall-includeHEADERS

all: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' INSTALL_SCRIPT='$(INSTALL_PROGRAM)' install
installdirs:
	$(mkinstalldirs)  $(bindir) $(includedir)


mostlyclean-generic:
	test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	rm -f Makefile $(DISTCLEANFILES)
	rm -f config.cache config.log stamp-h stamp-h[0-9]*
	test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
	test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean:  mostlyclean-noinstLIBRARIES mostlyclean-compile \
		mostlyclean-binPROGRAMS mostlyclean-tags \
		mostlyclean-depend mostlyclean-generic

clean:  clean-noinstLIBRARIES clean-compile clean-binPROGRAMS clean-tags \
		clean-depend clean-generic mostlyclean

distclean:  distclean-noinstLIBRARIES distclean-compile \
		distclean-binPROGRAMS distclean-tags distclean-depend \
		distclean-generic clean
	rm -f config.status

maintainer-clean:  maintainer-clean-noinstLIBRARIES \
		maintainer-clean-compile maintainer-clean-binPROGRAMS \
		maintainer-clean-tags maintainer-clean-depend \
		maintainer-clean-generic distclean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

.PHONY: default mostlyclean-noinstLIBRARIES distclean-noinstLIBRARIES \
clean-noinstLIBRARIES maintainer-clean-noinstLIBRARIES \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-binPROGRAMS distclean-binPROGRAMS \
clean-binPROGRAMS maintainer-clean-binPROGRAMS uninstall-binPROGRAMS \
install-binPROGRAMS uninstall-includeHEADERS install-includeHEADERS \
tags mostlyclean-tags distclean-tags clean-tags maintainer-clean-tags \
distdir mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend check-TESTS info dvi installcheck install-exec \
install-data install uninstall all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
