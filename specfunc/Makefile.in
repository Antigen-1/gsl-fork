# Makefile.in generated automatically by automake 1.2 from Makefile.am

# Copyright (C) 1994, 1995, 1996, 1997 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.


SHELL = /bin/sh

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = true
PRE_INSTALL = true
POST_INSTALL = true
NORMAL_UNINSTALL = true
PRE_UNINSTALL = true
POST_UNINSTALL = true
host_alias = @host_alias@
host_triplet = @host@
CC = @CC@
CPP = @CPP@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
VERSION = @VERSION@
full_top_builddir = @full_top_builddir@
full_top_srcdir = @full_top_srcdir@

lib_LIBRARIES = libgslspecfunc.a 

check_PROGRAMS = test_sf

include_HEADERS = \
	gsl_sf.h 	    	\
	gsl_specfunc.h		\
	gsl_sf_airy.h       	\
	gsl_sf_bessel.h     	\
	gsl_sf_chebyshev.h  	\
	gsl_sf_coulomb.h	\
	gsl_sf_dilog.h      	\
	gsl_sf_erf.h        	\
	gsl_sf_expint.h        	\
	gsl_sf_fermi_dirac.h	\
	gsl_sf_gamma.h      	\
	gsl_sf_laguerre.h   	\
	gsl_sf_legendre.h	\
	gsl_sf_log.h 		\
	gsl_sf_pow_int.h 	\
	gsl_sf_psi.h		\
	gsl_sf_trig.h

noinst_HEADERS = \
	bessel_amp_phase.h	\
	bessel.h		\
	airy_impl.h		\
	bessel_I0_impl.h	\
	bessel_I1_impl.h	\
	bessel_In_impl.h	\
	bessel_J0_impl.h	\
	bessel_J1_impl.h	\
	bessel_Jn_impl.h	\
	bessel_K0_impl.h	\
	bessel_K1_impl.h	\
	bessel_Kn_impl.h	\
	bessel_Y0_impl.h	\
	bessel_Y1_impl.h	\
	bessel_Yn_impl.h	\
	expint_impl.h		\
	shint_impl.h		\
	sinint_impl.h

INCLUDES = -I$(srcdir)/.. -I$(srcdir)/../err -I$(srcdir)/../integration 

TESTS = test_sf

test_sf_LDADD = libgslspecfunc.a ../err/libgslerr.a ../err/libgsltest.a ../utils/libutils.a
test_sf_DEPENDENCIES = libgslspecfunc.a
test_sf_SOURCES = test_sf.c

libgslspecfunc_a_SOURCES = 	\
	airy.c			\
	airy_der.c		\
	bessel.c		\
	bessel.h                \
	bessel_I0.c		\
	bessel_I0_impl.h	\
	bessel_I1.c		\
	bessel_I1_impl.h	\
	bessel_In.c		\
	bessel_In_impl.h	\
	bessel_J0.c		\
	bessel_J0_impl.h	\
	bessel_J1.c		\
	bessel_J1_impl.h	\
	bessel_Jn.c		\
	bessel_Jn_impl.h	\
	bessel_K0.c		\
	bessel_K0_impl.h	\
	bessel_K1.c		\
	bessel_K1_impl.h	\
	bessel_Kn.c		\
	bessel_Kn_impl.h	\
	bessel_Y0.c		\
	bessel_Y0_impl.h	\
	bessel_Y1.c		\
	bessel_Y1_impl.h	\
	bessel_Yn.c		\
	bessel_amp_phase.c	\
        bessel_amp_phase.h      \
	bessel_j.c		\
	chebyshev.c		\
	dilog.c			\
	erfc.c			\
	expint.c		\
	fermi_dirac.c		\
	gamma.c			\
	laguerre.c		\
	legendre.c		\
	legendre_assoc.c	\
	log.c			\
	pow_int.c		\
	psi.c			\
        recurse.h               \
	shint.c			\
	expint_impl.h		\
	shint_impl.h		\
	sig2lamp.c		\
	sinint.c		\
	sinint_impl.h		\
	t-erf.c			\
	trig.c
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
LIBRARIES =  $(lib_LIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
libgslspecfunc_a_LIBADD = 
libgslspecfunc_a_OBJECTS =  airy.o airy_der.o bessel.o bessel_I0.o \
bessel_I1.o bessel_In.o bessel_J0.o bessel_J1.o bessel_Jn.o bessel_K0.o \
bessel_K1.o bessel_Kn.o bessel_Y0.o bessel_Y1.o bessel_Yn.o \
bessel_amp_phase.o bessel_j.o chebyshev.o dilog.o erfc.o expint.o \
fermi_dirac.o gamma.o laguerre.o legendre.o legendre_assoc.o log.o \
pow_int.o psi.o shint.o sig2lamp.o sinint.o t-erf.o trig.o
AR = ar
test_sf_OBJECTS =  test_sf.o
test_sf_LDFLAGS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
LINK = $(CC) $(CFLAGS) $(LDFLAGS) -o $@
HEADERS =  $(include_HEADERS) $(noinst_HEADERS)

DIST_COMMON =  ChangeLog Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP = --best
DEP_FILES =  .deps/airy.P .deps/airy_der.P .deps/bessel.P \
.deps/bessel_I0.P .deps/bessel_I1.P .deps/bessel_In.P .deps/bessel_J0.P \
.deps/bessel_J1.P .deps/bessel_Jn.P .deps/bessel_K0.P .deps/bessel_K1.P \
.deps/bessel_Kn.P .deps/bessel_Y0.P .deps/bessel_Y1.P .deps/bessel_Yn.P \
.deps/bessel_amp_phase.P .deps/bessel_j.P .deps/chebyshev.P \
.deps/dilog.P .deps/erfc.P .deps/expint.P .deps/fermi_dirac.P \
.deps/gamma.P .deps/laguerre.P .deps/legendre.P .deps/legendre_assoc.P \
.deps/log.P .deps/pow_int.P .deps/psi.P .deps/shint.P .deps/sig2lamp.P \
.deps/sinint.P .deps/t-erf.P .deps/test_sf.P .deps/trig.P
SOURCES = $(libgslspecfunc_a_SOURCES) $(test_sf_SOURCES)
OBJECTS = $(libgslspecfunc_a_OBJECTS) $(test_sf_OBJECTS)

default: all

.SUFFIXES:
.SUFFIXES: .c .o
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu specfunc/Makefile

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-libLIBRARIES:

clean-libLIBRARIES:
	test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

distclean-libLIBRARIES:

maintainer-clean-libLIBRARIES:

install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(libdir)
	list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(libdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(libdir)/$$p; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(RANLIB) $(libdir)/$$p"; \
	    $(RANLIB) $(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	$(NORMAL_UNINSTALL)
	list='$(lib_LIBRARIES)'; for p in $$list; do \
	  rm -f $(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	rm -f *.o core

clean-compile:

distclean-compile:
	rm -f *.tab.c

maintainer-clean-compile:

libgslspecfunc.a: $(libgslspecfunc_a_OBJECTS) $(libgslspecfunc_a_DEPENDENCIES)
	rm -f libgslspecfunc.a
	$(AR) cru libgslspecfunc.a $(libgslspecfunc_a_OBJECTS) $(libgslspecfunc_a_LIBADD)
	$(RANLIB) libgslspecfunc.a

mostlyclean-checkPROGRAMS:

clean-checkPROGRAMS:
	test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

distclean-checkPROGRAMS:

maintainer-clean-checkPROGRAMS:

test_sf: $(test_sf_OBJECTS) $(test_sf_DEPENDENCIES)
	@rm -f test_sf
	$(LINK) $(test_sf_LDFLAGS) $(test_sf_OBJECTS) $(test_sf_LDADD) $(LIBS)

install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(includedir)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  echo " $(INSTALL_DATA) $(srcdir)/$$p $(includedir)/$$p"; \
	  $(INSTALL_DATA) $(srcdir)/$$p $(includedir)/$$p; \
	done

uninstall-includeHEADERS:
	$(NORMAL_UNINSTALL)
	list='$(include_HEADERS)'; for p in $$list; do \
	  rm -f $(includedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES)
	here=`pwd` && cd $(srcdir) && mkid -f$$here/ID $(SOURCES) $(HEADERS)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES)
	tags=; \
	here=`pwd`; \
	test -z "$(ETAGS_ARGS)$(SOURCES)$(HEADERS)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $(SOURCES) $(HEADERS) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = specfunc

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu specfunc/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  test -f $(distdir)/$$file \
	  || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $$d/$$file $(distdir)/$$file; \
	done

MKDEP = gcc -M $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)
-include .deps/.P
.deps/.P: $(BUILT_SOURCES)
	echo > $@

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:

maintainer-clean-depend:
	rm -rf .deps

.deps/%.P: %.c
	@echo "Computing dependencies for $<..."
	@o='o'; \
	test -n "$o" && o='$$o'; \
	$(MKDEP) $< >$@.tmp \
	  && sed "s,^\(.*\)\.o:,\1.$$o \1.l$$o $@:," < $@.tmp > $@ \
	  && rm -f $@.tmp
check-TESTS: $(TESTS)
	@failed=0; all=0; \
	srcdir=$(srcdir); export srcdir; \
	for tst in $(TESTS); do \
	  if test -f $$tst; then dir=.; \
	  else dir="$(srcdir)"; fi; \
	  if $(TESTS_ENVIRONMENT) $$dir/$$tst; then \
	    all=`expr $$all + 1`; \
	    echo "PASS: $$tst"; \
	  elif test $$? -ne 77; then \
	    all=`expr $$all + 1`; \
	    failed=`expr $$failed + 1`; \
	    echo "FAIL: $$tst"; \
	  fi; \
	done; \
	if test "$$failed" -eq 0; then \
	  banner="All $$all tests passed"; \
	else \
	  banner="$$failed of $$all tests failed"; \
	fi; \
	dashes=`echo "$$banner" | sed s/./=/g`; \
	echo "$$dashes"; \
	echo "$$banner"; \
	echo "$$dashes"; \
	test "$$failed" -eq 0
info:
dvi:
check: all $(check_PROGRAMS)
	$(MAKE) check-TESTS
installcheck:
install-exec: install-libLIBRARIES
	@$(NORMAL_INSTALL)

install-data: install-includeHEADERS
	@$(NORMAL_INSTALL)

install: install-exec install-data all
	@:

uninstall: uninstall-libLIBRARIES uninstall-includeHEADERS

all: Makefile $(LIBRARIES) $(HEADERS)

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' INSTALL_SCRIPT='$(INSTALL_PROGRAM)' install
installdirs:
	$(mkinstalldirs)  $(libdir) $(includedir)


mostlyclean-generic:
	test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	rm -f Makefile $(DISTCLEANFILES)
	rm -f config.cache config.log stamp-h stamp-h[0-9]*
	test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
	test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean:  mostlyclean-libLIBRARIES mostlyclean-compile \
		mostlyclean-checkPROGRAMS mostlyclean-tags \
		mostlyclean-depend mostlyclean-generic

clean:  clean-libLIBRARIES clean-compile clean-checkPROGRAMS clean-tags \
		clean-depend clean-generic mostlyclean

distclean:  distclean-libLIBRARIES distclean-compile \
		distclean-checkPROGRAMS distclean-tags distclean-depend \
		distclean-generic clean
	rm -f config.status

maintainer-clean:  maintainer-clean-libLIBRARIES \
		maintainer-clean-compile maintainer-clean-checkPROGRAMS \
		maintainer-clean-tags maintainer-clean-depend \
		maintainer-clean-generic distclean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

.PHONY: default mostlyclean-libLIBRARIES distclean-libLIBRARIES \
clean-libLIBRARIES maintainer-clean-libLIBRARIES uninstall-libLIBRARIES \
install-libLIBRARIES mostlyclean-compile distclean-compile \
clean-compile maintainer-clean-compile mostlyclean-checkPROGRAMS \
distclean-checkPROGRAMS clean-checkPROGRAMS \
maintainer-clean-checkPROGRAMS uninstall-includeHEADERS \
install-includeHEADERS tags mostlyclean-tags distclean-tags clean-tags \
maintainer-clean-tags distdir mostlyclean-depend distclean-depend \
clean-depend maintainer-clean-depend check-TESTS info dvi installcheck \
install-exec install-data install uninstall all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean

#	coulomb.c		\ doesn't work yet

strict:
	$(MAKE) CFLAGS="-ansi -pedantic -W -Wall -Wtraditional -Wconversion -Wshadow -Wpointer-arith -Wcast-qual -Wcast-align -Wwrite-strings -Waggregate-return -Wstrict-prototypes -fshort-enums -fno-common -Wmissing-prototypes -Wnested-externs -g -O4"

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
